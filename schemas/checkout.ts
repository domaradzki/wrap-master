import { z } from "zod"; // Import zod if you're using it for validation

// Assuming you have a Zod schema for validation
export const DocumentSchema = z.object({
  name: z.string(),
  closed: z.boolean(),
  companyId: z.string(),
  currency: z.string(),
  dateInsert: z.date(),
  deliveryAddress: z.string(),
  details: z.string(),
  documentId: z.string(),
  documentStatus: z.number(),
  exchangeRate: z.number(),
  orders: z.array(
    z.object({
      assortment: z.string(),
      code: z.string(),
      dateOfRealisation: z.date(),
      grossWeight: z.number(),
      kind: z.string(),
      margin: z.number(),
      netValue: z.number(),
      netWeight: z.number(),
      orderId: z.number(),
      price: z.number(),
      productCode: z.string(),
      productId: z.number(),
      quantity: z.number(),
      roller: z.string().optional(),
      sleeve: z.number().optional(),
      stretchColor: z.string().optional(),
      stretchThickness: z.number().optional(),
      type: z.string(),
      unit: z.string(),
      postfix: z.string().optional(),
      tapeLong: z.number().optional().nullable(),
      tapeWidth: z.number().optional().nullable(),
      tapeThickness: z.number().optional().nullable(),
      numberOfColors: z.number().optional().nullable(),
      glue: z.string().optional(),
      tapeColor: z.string().optional(),
      color1: z.string().optional(),
      color2: z.string().optional(),
      color3: z.string().optional(),
      dateOfAcceptaion: z.date().optional().nullable(),
      printName: z.string().optional(),
    })
  ),
  paymentMethod: z.string(),
  signature: z.string(),
  symbol: z.string(),
  timestamp: z.number(),
  trader: z.string(),
  transport: z.string(),
});
